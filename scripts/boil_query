#!/bin/bash

name=boil_query
script_dir=$(dirname $(realpath "${BASH_SOURCE[0]}"))

print_usage(){
cat << EOF     
Usage:                      
        $name QUERY
	
	Where QUERY is one of:
	--install-location
		The install prefix of boil
	--template-dir
		Where template directories are stored
	--global-config-path
		The global boil configuration location
	--user-config-path
		The user's local boil configuration location
	--global-config
		Contents of the global configuration file
	--user-config
		Contents of the user's local configuration file
	--config
		Contents of both the global and users configuration files
        -h, --help
                prints this help message
EOF
}

#-o f: <- expects argument for f
#-o h <- doesn't expect argument for h
OPTS=`getopt -o htcug --long help,install-location,template-dir,global-config-path,user-config-path,global-config,user-config,config -n "$name"  -- "$@"`
if [ $? != 0 ] ; then echo "Failed to parse args" >&2 ; exit 1 ; fi

eval set -- "$OPTS"

#Global and local paths
#Global paths are determined by the install prefix
#Local paths are determined by convention and XDG_CONFIG_HOME
install_location(){
    printf "$(realpath ${script_dir}/..)\n"
}

set_config_dir() {
    config_dir="$HOME/.config"
    if [[ -d "$XDG_CONFIG_HOME" ]]; then
        config_dir="$XDG_CONFIG_HOME"
    fi
}

#Config paths
global_config_path(){
    #Get the install directory
    install_dir="$(install_location)"
    printf "$install_dir/share/boil/config\n"
}

user_config_path(){
    set_config_dir
    printf "$config_dir/boil/config\n"
}

global_config(){
    cfg_file="$(global_config_path)"
    if [[ -e ${cfg_file} ]]; then
        cat ${cfg_file}
    else
	printf "#No global config file found at ${cfg_file}\n" >&2
	exit 2
    fi

}

user_config(){
    set_config_dir
    cfg_file="$config_dir/boil/config"
    if [[ -e ${cfg_file} ]]; then
        cat ${cfg_file}
    else
	printf "#No user config file found at ${cfg_file}\n" >&2
	exit 2
    fi
}

config(){
    global_config
    user_config
}

source_config()
{
    gcfg="$(global_config_path)"
    ucfg="$(user_config_path)"
    . $gcfg &> /dev/null
    . $ucfg &> /dev/null
}

template_dir(){
    set_config_dir
    source_config
    if [[ -d "$BOIL_TEMPLATE_DIR" ]]
    then
        template_dir="$(realpath $BOIL_TEMPLATE_DIR)"
    else
        template_dir="$config_dir/boil/templates"
    fi

    printf "$template_dir\n"
}

while true;do
case "$1" in
-h|--help)
    print_usage
    exit 0
    ;;
--install-location)
    install_location
    exit
    ;;
--global-config-path)
    global_config_path
    exit
    ;;
--user-config-path)
    user_config_path
    exit
    ;;
-g|--global-config)
    global_config
    exit
    ;;
-u|--user-config)
    user_config
    exit
    ;;
-c|--config)
    config
    exit
    ;;
-t|--template-dir)
    template_dir
    exit
    ;;
--)
    shift
    break
    ;;
*)
    break
    ;;
esac
shift
done

print_usage
