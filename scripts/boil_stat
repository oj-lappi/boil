#!/bin/bash

name=boil_stat

print_usage(){
cat << EOF     
Usage:                      
        $name PATH
                Stat the boil type of the PATH
		Which is one of:
		 - no file
		 - executable file
		 - regular file
 		 - regular dir
		 - boil template: single file
		 - boil template: directory tree
        -h, --help
                prints this help message
EOF
}

#-o f: <- expects argument for f
#-o h <- doesn't expect argument for h
OPTS=`getopt -o hv --long help,verbose -n "$name"  -- "$@"`
if [ $? != 0 ] ; then echo "Failed to parse args" >&2 ; exit 1 ; fi

eval set -- "$OPTS"

#First check template_dir/filename

verbose=""

while true;do
case "$1" in
-h|--help)
	print_usage
	exit 0
	;;
-v|--verbose)
	verbose=verbose
	;;
--)
	shift
	break
	;;
*)
	break
	;;
esac
shift
done

if [[ $# -ne 1 ]]; then
    echo "Please provide a single file path"
    print_usage
    exit 1
fi

input_path="$1"

#Option parsing done, script starts here

stat_boil_template(){
    boil_template="$1"
    if [[ ! -e ${boil_template} ]]; then
        echo "Path does not point to a file or directory"
	exit 2
    fi

    tmpl_manifest_file=boil.manifest
    tmpl_config_file=boil.toml

    if [[ -f ${boil_template}/${tmpl_manifest_file} ]]; then
	echo "${boil_template} : Boil template tree"
        boil_list_templates ${boil_template}
    elif [[ -f ${boil_template}/${tmpl_config_file} ]]; then
        #TODO: parse toml file
	echo "${boil_template} : Boil template"
    else
    	if [[ -d ${boil_template} ]]; then
	    echo "${boil_template} : Regular directory"
    	elif [[ -x ${boil_template} ]]; then
	    echo "${boil_template} : Executable file"
	else
	    echo "${boil_tempalte} : Regular file"
	fi
    fi
}

#TODO: Check if first char is . or / before checking the template dir path
tmpl_dir="$(boil_query --template-dir)"
template_dir_path="${tmpl_dir}/${input_path}"

if [[ -e ${template_dir_path} ]]; then
    if [[ "${verbose}" = "verbose" ]]; then
        echo "# Found template ${input_path} in template directory ${tmpl_dir}"
    fi
    stat_boil_template ${template_dir_path}
else
    if [[ "${verbose}" = "verbose" ]]; then
        echo "# No template ${input_path} in template directory ${tmpl_dir}"
        echo "# Interpreting as regular path"
    fi
    stat_boil_template ${input_path}
fi

